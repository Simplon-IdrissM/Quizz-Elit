<?php

namespace AppBundle\Repository;

use AppBundle\Model\JsonConverter;

use Doctrine\Common\Util\Debug;
/**
 * QuestionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class QuestionRepository extends \Doctrine\ORM\EntityRepository
{
    public function findByRandom($category){
        $json = new JsonConverter();
        // $questions = $this->getDoctrine()->getManager()
        //         ->getRepository('AppBundle:Question')
        //         ->findByCatQuestion($category);
        
        // $questions = $this->getEntityManager()->createQuery('SELECT p FROM AppBundle:Question p WHERE p.catQuestion = :cat ORDER BY RAND() LIMIT 5')->addSelect('RAND() as HIDDEN rand')
        //                 ->setParameter('cat', $category)->getResult();
        $questions = $this->createQueryBuilder('q')
                        ->where('q.catQuestion = :cat')
                        ->setParameter('cat', $category)
                        ->addSelect('RAND() as HIDDEN rand')
                        ->addOrderBy('rand')
                        ->setMaxResults(5)
                        ->getQuery()->getResult();
        // $fiveQuestion = array();
        // count($questions) < 5 ? $limit = count($questions) : $limit = 5;
        
        // for($i=0; $i < $limit; $i++){
        //     if(count($questions) > 2){
        //         $index = random_int(0, count($questions)-1);
        //         array_push($fiveQuestion, $questions[$index]);
        //         unset($questions[$index]);
        //         array_values($questions);
        //     }
        // }

        // array_map(function($item) use($json){
        //     $em = $this->getDoctrine()->getManager()
        //                 ->getRepository('AppBundle:Reponse')
        //                 ->findByCatReponse($item->getCatReponse());
        //     $falsies = array();
        //     $n = 0;
        //     for($i = 0; $i < 3; $i++){
        //         $index = random_int(0, count($em)-1);

        //         while($em[$index]->getReponse() == $item->getReponse()){
        //             $index = random_int(0, count($em)-1);
        //         }

        //         array_push($falsies, $em[$index]->getReponse());
        //         unset($em[$index]);
        //         $tmp = array_values($em);
        //         $em=$tmp;
        //     }
        //     //todo renvoyer 5 questions
        //     $json->addQuestion($item, $falsies);
        // },$questions);
        // return $json->tojson();
        return $questions;
    }
}
